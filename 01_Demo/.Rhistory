utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
q()
setwd("~/Digamber/BootCamp/R_Analysis/01_Demo")
filter_table1 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
library(jsonlite)
demo_table2 <- fromJSON(txt='demo_json')
demo_table2 <- fromJSON(txt='demo.json')
demo_table2[3,3]
filter_table2 <-subset(demo_table2, price > 10000 $ drive == "4wd" & "clean" %in% title_status)
filter_table2 <-subset(demo_table2, price > 10000 $ drive == "4wd" & "clean" %in% title_status)
filter_table2 <-subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
filter_table2 <- subset(demo_table2, price > 10000)
View(filter_table2)
View(demo_table2)
reprex:::reprex_addin()
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
?sample()
animals <- c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog")
sample(animals, 4)
sample(animals, 4)
sample(animals, 4)
demo_table
demo_table <- read.csv(txt = "demo.csv")
demo_table <- read.csv(file = "demo.csv")
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows]
demo_table[sample_rows]
demo_table[sample(1:nrow(demo_table), 3),]
?nrow()
nrow(demo_table)
num_rows
?mutate()
library(tidyverse)
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarise(Mean_Milage=mean(odometer))
reprex:::reprex_addin()
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarise(Mean_Milage=mean(odometer))
demo_table2
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarise(Mean_Milage=mean(odometer))
View(summarize_demo)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Milage=mean(odometer), Maximum_Price=max(price), Num_Vehicles=n())
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Milage=mean(odometer), Maximum_Price=max(price), Num_Vehicles=n(), .group = "rowwise")
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Milage=mean(odometer), Maximum_Price=max(price), Num_Vehicles=n(), .group = "keep")
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Milage=mean(odometer), Maximum_Price=max(price), Num_Vehicles=n(), .groups = "keep")
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Milage=mean(odometer), Maximum_Price=max(price), Num_Vehicles=n(), .groups = "rowwise")
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Milage=mean(odometer), Maximum_Price=max(price), Num_Vehicles=n(), .groups = "drop")
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Milage=mean(odometer), Maximum_Price=max(price), Num_Vehicles=n(), .groups = "drop_last")
View(summarize_demo)
demo_table3 <-read.csv(file='demo2.csv',check.names = F, stringsAsFactors = F )
View(demo_table3)
long_table <- gather(demo_table3, key="Metric", value="Score", buying_price:popularity)
View(long_table)
wide_table <-long_table %>% spread(key = "Metric", value = "Score")
View(wide_table)
all.equal(demo_table3, wide_table)
?ggplot()
head(mpg)
plt <- ggplot(mpg, aes(x=class))
plt + geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n() .groups = 'keep')
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
View(mpg_summary)
plt <- ggplot(mpg_summary, aes(x=manufacturer, y=Vehicle_Count))
plt + geom_col()
plt + geom_col()+xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset")
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") +
theme(axis.text.x = element_text(angle = 45, hjust=1))
?subset
mpg_summary <- subset(mpg, manufacturer=="toyota") %>% group_by(cyl) %>% summarise(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=cyl, y=Mean_Hwy))
plt + geom_line()
plt + geom_line() +scale_x_discrete(limits=c(4,6,8)) +scale_y_continuous(breaks = c(15:30))
plt <- ggplot(mpg, aes(x=displ, y=cty))
plt + geom_point() + xlab("Engine Size (L)") + ylab ("City Fuel-Efficiency (MPG)")
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class))
plt +geom_point() +labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class")
?labs
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class, shape=drv))
plt +geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class", shape="Type of Drive")
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class, shape=drv, size=cty))
plt+geom_point() +labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class", shape="Type of Drive", size="Null")
plt <- ggplot(mpg, aes(y=hwy))
plt + geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy))
plt + geom_boxplot()
plt + geom_boxplot()+ theme(axis.text.x=element_text(angle = 45, hjust=1))
mpg_summary <- mpg %>% group_by(class,year) %>%summarise(Mean_Hwy=mean(hwy), .groups = 'keep')
View(mpg_summary)
plt <- ggplot(mpg_summary, aes(x=class, y=factor(year), fill=Mean_Hwy))
plt + geom_tile() +labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MPG)")
plt + geom_tile() +labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MPG)")+theme(axis.text.x = element_text(angle = 45, hjust = 1))
mpg_summary <- mpg %>% group_by(model,year) %>% summarise(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x="Vehicle Models", y="Vehicle Year", fill="Mean Highway (MPG)"))
plt + geom_tile() +labs("Vehicle Class", "Vehicle Year", "Mean Highway (MPG)") +theme(axis.line.x = element_text(angle = 45, hjust = 1))
plt + geom_tile() +labs("Vehicle Class", "Vehicle Year", "Mean Highway (MPG)") +theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt + geom_tile() +labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MPG)") +theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt <- ggplot(mpg_summary, aes(x=model, y=factor(year), fill=Mean_Hwy))
plt + geom_tile() +labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MPG)") +theme(axis.text.x = element_text(angle = 45, hjust = 1))
plt + geom_tile() +labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MPG)") +theme(axis.text.x = element_text(angle = 90, hjust = 1))
>plt <- ggplot(mpg, aes(x=manufacturer, y=hwy))
>plt <- ggplot(mpg, aes(x=manufacturer, y=hwy))
